{
  "type": "ResearchNotebook",
  "version": 1,
  "cells": [
    {
      "type": "js",
      "source": "d = new Packages.research.dhtml.HDocument();\nd.heading1(\"Heading 1\");\nd.style('code').foregroundColor('red');\nd.style('comment').backgroundColor('#ffffdd');\nd.text('code', 'code\\nsegment');\nd.block('comment').text('line one\\n').text('line two\\n');\nprint(d.toHtml());\nf = FS.tempFile(\"HDocument\", \".htm\");\nf.deleteOnExit();\nIO.write(d.toHtml(), f);\n//NET.inBrowser(\"file://\" + f);",
      "sequence": 162,
      "output": [
        {
          "type": "text",
          "text": "<html>\n<head>\n<style>\n.code { color:#FF0000; }\n.comment { }\n</style>\n</head>\n<body>\n<h1>Heading 1</h1>\n<div style='code'>code<br>segment</div>\n<div class='comment'>\nline one<br>line two<br></div>\n</body>\n</html>\n"
        }
      ]
    },
    {
      "type": "js",
      "source": "FS.help",
      "sequence": 118,
      "output": [
        {
          "type": "text",
          "text": "FS provides access to the filesystem:\n   FS.exists(file)                    - tests whether the file exists\n   FS.freeSpace, getFreeSpace(path)   - returns the amount of free space\n   FS.isDirectory(path)               - tests whether the file denoted by this path is a directory\n   FS.isFile(path)                    - tests whether the file denoted by this path is a normal file\n   FS.isHidden(path)                  - tests whether the file denoted by this path is a hidden file\n   FS.lastModified(file)              - returns the file timestamp\n   FS.ls([path],...)                  - lists files\n   FS.pwd()                           - returns the current directory\n   FS.tempFile(prefix, suffix)        - creates a temporary file\n   FS.totalSpace, getTotalSpace(path) - returns the amount of total space\n   FS.touch(file)                     - updates the timestamp of a file, creating it if necessary"
        }
      ]
    },
    {
      "type": "js",
      "source": "IO.help",
      "sequence": 119,
      "output": [
        {
          "type": "text",
          "text": "IO provides input/output functionality:\n   IO.loadImage(file)   - loads image file\n   IO.loadTable(file)   - loads table from CSV, XLS, or XLSX file\n   IO.write(text, file) - writes text file"
        }
      ]
    },
    {
      "type": "js",
      "source": "NET.help",
      "sequence": 142,
      "output": [
        {
          "type": "text",
          "text": "NET provides network-related functions:\n   NET.get(url)       - returns content specified by the URL\n   NET.inBrowser(url) - opens link in a browser"
        }
      ]
    },
    {
      "type": "js",
      "source": "UT.help",
      "sequence": 145,
      "output": [
        {
          "type": "text",
          "text": "UT offers helpful utility functions:\n   UT.hslColor(hue,saturation,luminocity) - create color from HSL values\n   UT.parse(html)                         - parse HTML document\n   UT.sleep(ms)                           - sleeps for the specified number of milliseconds"
        }
      ]
    },
    {
      "type": "js",
      "source": "v = NET.get('http://habrahabr.ru/');\nd = UT.parseHtml(v);\nd.getElementsByTag('title');",
      "sequence": 148,
      "output": [
        {
          "type": "text",
          "text": "<title>Лучшие публикации за сутки / Хабрахабр</title>"
        }
      ]
    }
  ]
}