{
  "type": "ResearchNotebook",
  "version": 1,
  "cells": [
    {
      "type": "h1",
      "source": "Test"
    },
    {
      "type": "js",
      "source": "d = new Packages.research.dhtml.HDocument();\nd.heading1(\"Heading 1\");\nd.style('code').\n\tfontFamily('Courier New, Lucida Console, Monospace').\n\t//fontStyle('italic').\n\tforegroundColor('red').\n\tpaddingLeft(\"100px\");\nd.style('comment').\n\tbackgroundColor('#ffffdd').\n\tpaddingLeft('200px');\nd.text('code', 'code\\nsegment');\nd.block('comment').text('line one\\n').nl().text('line two\\n');\nprint(d.toHtml());\nf = FS.tempFile(\"HDocument\", \".htm\");\nf.deleteOnExit();\nIO.write(d.toHtml(), f);\n//NET.inBrowser(\"file://\" + f);",
      "sequence": 201
    },
    {
      "type": "js",
      "source": "FS.help",
      "sequence": 228,
      "output": [
        {
          "type": "text",
          "text": "FS provides access to the filesystem:\n   FS.exists(file)                    - tests whether the file exists\n   FS.freeSpace, getFreeSpace(path)   - returns the amount of free space\n   FS.isDirectory(path)               - tests whether the file denoted by this path is a directory\n   FS.isFile(path)                    - tests whether the file denoted by this path is a normal file\n   FS.isHidden(path)                  - tests whether the file denoted by this path is a hidden file\n   FS.lastModified(file)              - returns the file timestamp\n   FS.ls([path],...)                  - lists files\n   FS.newFileScanner()                - returns a new file scanner tool\n   FS.newSync()                       - returns a new file synchronization tool\n   FS.pwd()                           - returns the current directory\n   FS.sync(source, target)            - synchronizes target with the source directory, ignoring failures\n   FS.tempFile(prefix, suffix)        - creates a temporary file\n   FS.totalSpace, getTotalSpace(path) - returns the amount of total space\n   FS.touch(file)                     - updates the timestamp of a file, creating it if necessary"
        }
      ]
    },
    {
      "type": "js",
      "source": "IO.help"
    },
    {
      "type": "js",
      "source": "NET.help",
      "sequence": 214
    },
    {
      "type": "js",
      "source": "new T()[0] = 5;",
      "sequence": 198,
      "output": [
        {
          "type": "text",
          "text": "5.0"
        }
      ]
    },
    {
      "type": "js",
      "source": "v = NET.get('http://goryachev.com/');\nd = UT.parseHtml(v);\nd.getElementsByTag('title').text();",
      "sequence": 175,
      "output": [
        {
          "type": "text",
          "text": "goryachev.com"
        }
      ]
    },
    {
      "type": "js",
      "source": "s = NET.get('http://sfbay.craigslist.org/sfc/sof/4845747945.html');\nprint(new java.lang.String(UT.decodeHex(s)));",
      "sequence": 211
    },
    {
      "type": "js",
      "source": "b = IO.readBytes('examples/small.csv');\nNB.display(b);\nIO.writeBytes(b, 'examples/small2.csv');",
      "sequence": 220,
      "output": [
        {
          "type": "text",
          "text": "[B@129a01cb"
        }
      ]
    },
    {
      "type": "js",
      "source": "IO.writeBytes([ 1,2,3, 257 ], 'examples/small3.bin');",
      "sequence": 229
    },
    {
      "type": "js",
      "source": "sc = FS.newFileScanner();\n\n// FIX fails here\nsc.addFolder('src', '- *\\n+ /goryachev/common/io/*.java');\n\n//sc.addFolder('src/goryachev/common/io', '- *\\n+ *.java');\n\nsc.setHandler(function(f)\n{\n\tprint(f);\n});\nsc.scan();"
    },
    {
      "type": "js",
      "source": "function a(x)\n{\n\treturn x + 1;\n}\n",
      "sequence": 2,
      "output": [
        {
          "type": "text",
          "text": "org.mozilla.javascript.InterpretedFunction@61a870c5"
        }
      ]
    },
    {
      "type": "js",
      "source": "print(a(5))",
      "sequence": 3,
      "output": [
        {
          "type": "text",
          "text": "6"
        }
      ]
    },
    {
      "type": "js",
      "source": "print(\"5\" + \"1\")",
      "sequence": 229,
      "output": [
        {
          "type": "text",
          "text": "51"
        }
      ]
    },
    {
      "type": "js",
      "source": "print(\"5\" - \"1\")",
      "sequence": 230,
      "output": [
        {
          "type": "text",
          "text": "4"
        }
      ]
    }
  ]
}