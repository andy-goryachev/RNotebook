{
  "type": "ResearchNotebook",
  "version": 1,
  "cells": [
    {
      "type": "h1",
      "source": "Test"
    },
    {
      "type": "js",
      "source": "d = new Packages.research.dhtml.HDocument();\nd.heading1(\"Heading 1\");\nd.style('code').\n\tfontFamily('Courier New, Lucida Console, Monospace').\n\t//fontStyle('italic').\n\tforegroundColor('red').\n\tpaddingLeft(\"100px\");\nd.style('comment').\n\tbackgroundColor('#ffffdd').\n\tpaddingLeft('200px');\nd.text('code', 'code\\nsegment');\nd.block('comment').text('line one\\n').nl().text('line two\\n');\nprint(d.toHtml());\nf = FS.tempFile(\"HDocument\", \".htm\");\nf.deleteOnExit();\nIO.write(d.toHtml(), f);\n//NET.inBrowser(\"file://\" + f);",
      "sequence": 201
    },
    {
      "type": "js",
      "source": "FS.help",
      "sequence": 118
    },
    {
      "type": "js",
      "source": "IO.help",
      "sequence": 221,
      "output": [
        {
          "type": "text",
          "text": "IO provides input/output functionality:\n   IO.loadImage(file)                 - loads image file\n   IO.loadTable(file)                 - loads table from CSV, XLS, or XLSX file\n   IO.newTableReader()                - creates a table reader\n   IO.readBytes(file)                 - reads byte array from a file\n   IO.readText(file)                  - reads text from a UTF-8 file\n   IO.readText(file, encoding)        - reads text from a file with specified encoding\n   IO.writeBytes(bytes,file)          - writes byte array to a file\n   IO.writeText(text, encoding, file) - writes text to file using the specified encoding\n   IO.writeText(text, file)           - writes text file using UTF-8"
        }
      ]
    },
    {
      "type": "js",
      "source": "NET.help",
      "sequence": 214
    },
    {
      "type": "js",
      "source": "new T()[0] = 5;",
      "sequence": 198,
      "output": [
        {
          "type": "text",
          "text": "5.0"
        }
      ]
    },
    {
      "type": "js",
      "source": "v = NET.get('http://goryachev.com/');\nd = UT.parseHtml(v);\nd.getElementsByTag('title').text();",
      "sequence": 175,
      "output": [
        {
          "type": "text",
          "text": "goryachev.com"
        }
      ]
    },
    {
      "type": "js",
      "source": "s = NET.get('http://sfbay.craigslist.org/sfc/sof/4845747945.html');\nprint(new java.lang.String(UT.decodeHex(s)));",
      "sequence": 211
    },
    {
      "type": "js",
      "source": "b = IO.readBytes('examples/small.csv');\nNB.display(b);\nIO.writeBytes(b, 'examples/small2.csv');",
      "sequence": 220,
      "output": [
        {
          "type": "text",
          "text": "[B@129a01cb"
        }
      ]
    },
    {
      "type": "js",
      "source": "IO.writeBytes([ 1,2,3, 257 ], 'examples/small3.bin');",
      "sequence": 226,
      "output": []
    }
  ]
}