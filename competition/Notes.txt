Products
	IPython notebook
		http://ipython.org/notebook.html
		http://ipython.org/ipython-doc/stable/interactive/qtconsole.html
		
		plots
			http://nbviewer.ipython.org/github/jrjohansson/scientific-python-lectures/blob/master/Lecture-4-Matplotlib.ipynb
			
	Mathics
		http://www.mathics.net/


wishlist
	http://www.pgbovine.net/ipython-notebook-first-impressions.htm
		- A more salient visual indicator of which cells have already executed, and in which order.
		- A more salient indicator of which global variables are currently in scope, and when they were last updated (e.g., by which cell).
		- To avoid global namespace pollution, add a toggle option to delete all global variables within a cell after it finishes executing, except for special variables marked as “persistent.”
		- Display timestamps for creation and most recent edit times for each cell, and also the last time each code cell was executed. Think of each cell as a “mini file“ with its own metadata.
		- Dependency tracking both between cells and with external code and data files, so that I can tell exactly when each cell output becomes stale and needs to be re-generated.
		- A “quick diff” mode where I can fork off a single cell beside the current version, update its code to try out a new idea, and then execute and see the results side-by-side with the old results to do a quick comparison.
		- More detailed undo/redo history for each individual cell. Imagine a simple slider-based UI where you can slide back and forth to see the cell's former contents.
